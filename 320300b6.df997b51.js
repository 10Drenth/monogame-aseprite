(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{234:function(e,t,i){"use strict";i.d(t,"a",(function(){return m})),i.d(t,"b",(function(){return y}));var n=i(0),r=i.n(n);function c(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){c(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)i=c[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)i=c[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},m=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},_=r.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,c=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(i),_=n,y=m["".concat(a,".").concat(_)]||m[_]||b[_]||c;return i?r.a.createElement(y,o(o({ref:t},l),{},{components:i})):r.a.createElement(y,o({ref:t},l))}));function y(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=i.length,a=new Array(c);a[0]=_;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,a[1]=o;for(var l=2;l<c;l++)a[l]=i[l];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,i)}_.displayName="MDXCreateElement"},95:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return a})),i.d(t,"metadata",(function(){return o})),i.d(t,"rightToc",(function(){return s})),i.d(t,"default",(function(){return p}));var n=i(3),r=i(7),c=(i(0),i(234)),a={id:"slice_slice_string__dictionary_int_slicekey__",sidebar_label:"Slice(string, Dictionary<int,SliceKey>)",hide_title:!0,slug:"slice_slice_string__dictionary_int_slicekey__"},o={unversionedId:"api/slice_slice_string__dictionary_int_slicekey__",id:"api/slice_slice_string__dictionary_int_slicekey__",isDocsHomePage:!1,title:"slice_slice_string__dictionary_int_slicekey__",description:"MonoGame.Aseprite",source:"@site/docs\\api\\slice_slice_string__dictionary_int_slicekey__.md",slug:"/api/slice_slice_string__dictionary_int_slicekey__",permalink:"/monogame-aseprite/api/slice_slice_string__dictionary_int_slicekey__",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/slice_slice_string__dictionary_int_slicekey__.md",version:"current",sidebar_label:"Slice(string, Dictionary<int,SliceKey>)",sidebar:"apiSideBar",previous:{title:"slice_slice_string__color__slicekey___",permalink:"/monogame-aseprite/api/slice_slice_string__color__slicekey___"},next:{title:"slice_slice_string__ienumerable_slicekey__",permalink:"/monogame-aseprite/api/slice_slice_string__ienumerable_slicekey__"}},s=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.Slice",id:"monogameasepritegraphicsmonogameasepritegraphicsslice",children:[]},{value:"Slice(string, System.Collections.Generic.Dictionary&lt;int,MonoGame.Aseprite.Graphics.SliceKey&gt;) Constructor",id:"slicestring-systemcollectionsgenericdictionaryintmonogameasepritegraphicsslicekey-constructor",children:[]}],l={rightToc:s};function p(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},l,i,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h4",{id:"index"},Object(c.b)("a",Object(n.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(c.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsslice"},Object(c.b)("a",Object(n.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(c.b)("a",Object(n.a)({parentName:"h3"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice")),Object(c.b)("h2",{id:"slicestring-systemcollectionsgenericdictionaryintmonogameasepritegraphicsslicekey-constructor"},"Slice(string, System.Collections.Generic.Dictionary","<","int,MonoGame.Aseprite.Graphics.SliceKey",">",") Constructor"),Object(c.b)("p",null,"Creates a new ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice")," instance  "),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-csharp"}),"public Slice(string name, System.Collections.Generic.Dictionary<int,MonoGame.Aseprite.Graphics.SliceKey> keys);\n")),Object(c.b)("h4",{id:"parameters"},"Parameters"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"name")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.String",title:"System.String"}),"System.String"),Object(c.b)("br",{parentName:"p"}),"\n","The name of the slice  "),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"keys")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2",title:"System.Collections.Generic.Dictionary`2"}),"System.Collections.Generic.Dictionary","<"),Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Int32",title:"System.Int32"}),"System.Int32"),Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2",title:"System.Collections.Generic.Dictionary`2"}),","),Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2",title:"System.Collections.Generic.Dictionary`2"}),">"),Object(c.b)("br",{parentName:"p"}),"\n","A collection of ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey")," instances that describe the",Object(c.b)("br",{parentName:"p"}),"\n","bounds of this slice per frame.  "))}p.isMDXComponent=!0}}]);