(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{182:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return l}));var i=r(3),a=r(7),n=(r(0),r(213)),c={id:"animatedsprite_addslice_string__color__slicekey___",sidebar_label:"AddSlice(string, Color, SliceKey[])",hide_title:!0,slug:"animatedsprite_addslice_string__color__slicekey___"},o={unversionedId:"api/animatedsprite_addslice_string__color__slicekey___",id:"api/animatedsprite_addslice_string__color__slicekey___",isDocsHomePage:!1,title:"animatedsprite_addslice_string__color__slicekey___",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animatedsprite_addslice_string__color__slicekey___.md",slug:"/api/animatedsprite_addslice_string__color__slicekey___",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__color__slicekey___",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animatedsprite_addslice_string__color__slicekey___.md",version:"current",sidebar_label:"AddSlice(string, Color, SliceKey[])",sidebar:"apiSideBar",previous:{title:"animatedsprite_addslice_string__color__ienumerable_slicekey__",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__color__ienumerable_slicekey__"},next:{title:"animatedsprite_addslice_string__dictionary_int_slicekey__",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__dictionary_int_slicekey__"}},s=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.AnimatedSprite",id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite",children:[]},{value:"AnimatedSprite.AddSlice(string, Color, MonoGame.Aseprite.Graphics.SliceKey[]) Method",id:"animatedspriteaddslicestring-color-monogameasepritegraphicsslicekey-method",children:[]}],p={rightToc:s};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(n.b)("wrapper",Object(i.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h4",{id:"index"},Object(n.b)("a",Object(i.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(n.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite"},Object(n.b)("a",Object(i.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(n.b)("a",Object(i.a)({parentName:"h3"},{href:"animatedsprite",title:"MonoGame.Aseprite.Graphics.AnimatedSprite"}),"AnimatedSprite")),Object(n.b)("h2",{id:"animatedspriteaddslicestring-color-monogameasepritegraphicsslicekey-method"},"AnimatedSprite.AddSlice(string, Color, MonoGame.Aseprite.Graphics.SliceKey[]) Method"),Object(n.b)("p",null,"Given the name, color, and ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey")," instances,",Object(n.b)("br",{parentName:"p"}),"\n","creates a new ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice")," instance and adds it to the",Object(n.b)("br",{parentName:"p"}),"\n","collection of slices.  "),Object(n.b)("pre",null,Object(n.b)("code",Object(i.a)({parentName:"pre"},{className:"language-csharp"}),"public void AddSlice(string name, Color color, params MonoGame.Aseprite.Graphics.SliceKey[] keys);\n")),Object(n.b)("h4",{id:"parameters"},"Parameters"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"name")," ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.String",title:"System.String"}),"System.String"),Object(n.b)("br",{parentName:"p"}),"\n","The name of the ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice"),".  "),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"color")," ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/Microsoft.Xna.Framework.Color",title:"Microsoft.Xna.Framework.Color"}),"Microsoft.Xna.Framework.Color"),Object(n.b)("br",{parentName:"p"}),"\n","The color of the ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice"),".  "),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"keys")," ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Array",title:"System.Array"}),"[]"),Object(n.b)("br",{parentName:"p"}),"\n","The ",Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey")," instances that belong to the slice.  "),Object(n.b)("h4",{id:"exceptions"},"Exceptions"),Object(n.b)("p",null,Object(n.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.ArgumentException",title:"System.ArgumentException"}),"System.ArgumentException"),Object(n.b)("br",{parentName:"p"}),"\n","Thrown if the slice collection already contains a slice with the same name  "))}l.isMDXComponent=!0},213:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return _}));var i=r(0),a=r.n(i);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),b=i,_=m["".concat(c,".").concat(b)]||m[b]||d[b]||n;return r?a.a.createElement(_,o(o({ref:t},p),{},{components:r})):a.a.createElement(_,o({ref:t},p))}));function _(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,c=new Array(n);c[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var p=2;p<n;p++)c[p]=r[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);