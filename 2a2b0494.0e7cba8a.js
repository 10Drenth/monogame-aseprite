(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{214:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return d}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=i.a.createContext({}),m=function(e){var t=i.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=m(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=m(r),u=n,d=l["".concat(c,".").concat(u)]||l[u]||b[u]||a;return r?i.a.createElement(d,o(o({ref:t},p),{},{components:r})):i.a.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var p=2;p<a;p++)c[p]=r[p];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},84:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return m}));var n=r(3),i=r(7),a=(r(0),r(214)),c={id:"animatedsprite_trygetcurrentframeslice_string__slicekey_",sidebar_label:"TryGetCurrentFrameSlice(string, SliceKey)",hide_title:!0,slug:"animatedsprite_trygetcurrentframeslice_string__slicekey_"},o={unversionedId:"api/animatedsprite_trygetcurrentframeslice_string__slicekey_",id:"api/animatedsprite_trygetcurrentframeslice_string__slicekey_",isDocsHomePage:!1,title:"animatedsprite_trygetcurrentframeslice_string__slicekey_",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animatedsprite_trygetcurrentframeslice_string__slicekey_.md",slug:"/api/animatedsprite_trygetcurrentframeslice_string__slicekey_",permalink:"/monogame-aseprite/api/animatedsprite_trygetcurrentframeslice_string__slicekey_",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animatedsprite_trygetcurrentframeslice_string__slicekey_.md",version:"current",sidebar_label:"TryGetCurrentFrameSlice(string, SliceKey)",sidebar:"apiSideBar",previous:{title:"animatedsprite_render_spritebatch_",permalink:"/monogame-aseprite/api/animatedsprite_render_spritebatch_"},next:{title:"animatedsprite_update_float_",permalink:"/monogame-aseprite/api/animatedsprite_update_float_"}},s=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.AnimatedSprite",id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite",children:[]},{value:"AnimatedSprite.TryGetCurrentFrameSlice(string, MonoGame.Aseprite.Graphics.SliceKey) Method",id:"animatedspritetrygetcurrentframeslicestring-monogameasepritegraphicsslicekey-method",children:[]}],p={rightToc:s};function m(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h4",{id:"index"},Object(a.b)("a",Object(n.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(a.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite"},Object(a.b)("a",Object(n.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(a.b)("a",Object(n.a)({parentName:"h3"},{href:"animatedsprite",title:"MonoGame.Aseprite.Graphics.AnimatedSprite"}),"AnimatedSprite")),Object(a.b)("h2",{id:"animatedspritetrygetcurrentframeslicestring-monogameasepritegraphicsslicekey-method"},"AnimatedSprite.TryGetCurrentFrameSlice(string, MonoGame.Aseprite.Graphics.SliceKey) Method"),Object(a.b)("p",null,"Get the Rectangle definition of the slice at the current frame of",Object(a.b)("br",{parentName:"p"}),"\n","animation, if there is a slice key defined for the frame  "),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-csharp"}),"public bool TryGetCurrentFrameSlice(string sliceName, out MonoGame.Aseprite.Graphics.SliceKey sliceKey);\n")),Object(a.b)("h4",{id:"parameters"},"Parameters"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"sliceName")," ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.String",title:"System.String"}),"System.String"),Object(a.b)("br",{parentName:"p"}),"\n","The name of the slice  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"sliceKey")," ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),"  "),Object(a.b)("h4",{id:"returns"},"Returns"),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Boolean",title:"System.Boolean"}),"System.Boolean"),Object(a.b)("br",{parentName:"p"}),"\n","A Rectangle definition of the frame slice, at the xy-coordinate of",Object(a.b)("br",{parentName:"p"}),"\n","this sprite.  If no slice key exists for the current frame,",Object(a.b)("br",{parentName:"p"}),"\n","null is returned.  "),Object(a.b)("h4",{id:"exceptions"},"Exceptions"),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.ArgumentException",title:"System.ArgumentException"}),"System.ArgumentException"),Object(a.b)("br",{parentName:"p"}),"\n","Thrown if the slice name provided does not exist in the animation definitions slice dictionary  "))}m.isMDXComponent=!0}}]);