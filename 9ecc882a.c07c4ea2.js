(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{161:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return c})),i.d(t,"metadata",(function(){return o})),i.d(t,"rightToc",(function(){return s})),i.d(t,"default",(function(){return l}));var n=i(3),r=i(7),a=(i(0),i(213)),c={id:"animatedsprite_addslice_string__dictionary_int_slicekey__",sidebar_label:"AddSlice(string, Dictionary<int,SliceKey>)",hide_title:!0,slug:"animatedsprite_addslice_string__dictionary_int_slicekey__"},o={unversionedId:"api/animatedsprite_addslice_string__dictionary_int_slicekey__",id:"api/animatedsprite_addslice_string__dictionary_int_slicekey__",isDocsHomePage:!1,title:"animatedsprite_addslice_string__dictionary_int_slicekey__",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animatedsprite_addslice_string__dictionary_int_slicekey__.md",slug:"/api/animatedsprite_addslice_string__dictionary_int_slicekey__",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__dictionary_int_slicekey__",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animatedsprite_addslice_string__dictionary_int_slicekey__.md",version:"current",sidebar_label:"AddSlice(string, Dictionary<int,SliceKey>)",sidebar:"apiSideBar",previous:{title:"animatedsprite_addslice_string__color__slicekey___",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__color__slicekey___"},next:{title:"animatedsprite_addslice_string__ienumerable_slicekey__",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__ienumerable_slicekey__"}},s=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.AnimatedSprite",id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite",children:[]},{value:"AnimatedSprite.AddSlice(string, System.Collections.Generic.Dictionary&lt;int,MonoGame.Aseprite.Graphics.SliceKey&gt;) Method",id:"animatedspriteaddslicestring-systemcollectionsgenericdictionaryintmonogameasepritegraphicsslicekey-method",children:[]}],p={rightToc:s};function l(e){var t=e.components,i=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h4",{id:"index"},Object(a.b)("a",Object(n.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(a.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite"},Object(a.b)("a",Object(n.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(a.b)("a",Object(n.a)({parentName:"h3"},{href:"animatedsprite",title:"MonoGame.Aseprite.Graphics.AnimatedSprite"}),"AnimatedSprite")),Object(a.b)("h2",{id:"animatedspriteaddslicestring-systemcollectionsgenericdictionaryintmonogameasepritegraphicsslicekey-method"},"AnimatedSprite.AddSlice(string, System.Collections.Generic.Dictionary","<","int,MonoGame.Aseprite.Graphics.SliceKey",">",") Method"),Object(a.b)("p",null,"Given the name and the key-value pair of ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),Object(a.b)("br",{parentName:"p"}),"\n","instances, creates a new ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice")," instance and adds it",Object(a.b)("br",{parentName:"p"}),"\n","to the collection of slices.  "),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-csharp"}),"public void AddSlice(string name, System.Collections.Generic.Dictionary<int,MonoGame.Aseprite.Graphics.SliceKey> keys);\n")),Object(a.b)("h4",{id:"parameters"},"Parameters"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"name")," ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.String",title:"System.String"}),"System.String"),Object(a.b)("br",{parentName:"p"}),"\n","The name of the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice"),".  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"keys")," ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2",title:"System.Collections.Generic.Dictionary`2"}),"System.Collections.Generic.Dictionary","<"),Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Int32",title:"System.Int32"}),"System.Int32"),Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2",title:"System.Collections.Generic.Dictionary`2"}),","),Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.Dictionary-2",title:"System.Collections.Generic.Dictionary`2"}),">"),Object(a.b)("br",{parentName:"p"}),"\n","The key-value pair collection of ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey")," instances",Object(a.b)("br",{parentName:"p"}),"\n","that belong to the slice.  "),Object(a.b)("h4",{id:"exceptions"},"Exceptions"),Object(a.b)("p",null,Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.ArgumentException",title:"System.ArgumentException"}),"System.ArgumentException"),Object(a.b)("br",{parentName:"p"}),"\n","Thrown if the slice collection already contains a slice with the same name  "))}l.isMDXComponent=!0},213:function(e,t,i){"use strict";i.d(t,"a",(function(){return m})),i.d(t,"b",(function(){return y}));var n=i(0),r=i.n(n);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function c(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?c(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):c(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},m=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(i),b=n,y=m["".concat(c,".").concat(b)]||m[b]||d[b]||a;return i?r.a.createElement(y,o(o({ref:t},p),{},{components:i})):r.a.createElement(y,o({ref:t},p))}));function y(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=i.length,c=new Array(a);c[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var p=2;p<a;p++)c[p]=i[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,i)}b.displayName="MDXCreateElement"}}]);