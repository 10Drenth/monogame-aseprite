(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{213:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return y}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(r),b=n,y=u["".concat(o,".").concat(b)]||u[b]||m[b]||i;return r?a.a.createElement(y,c(c({ref:t},s),{},{components:r})):a.a.createElement(y,c({ref:t},s))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},93:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return p})),r.d(t,"default",(function(){return l}));var n=r(3),a=r(7),i=(r(0),r(213)),o={id:"asepriteslicekey_hasninepatch",sidebar_label:"HasNinePatch",hide_title:!0,slug:"asepriteslicekey_hasninepatch"},c={unversionedId:"api/asepriteslicekey_hasninepatch",id:"api/asepriteslicekey_hasninepatch",isDocsHomePage:!1,title:"asepriteslicekey_hasninepatch",description:"MonoGame.Aseprite",source:"@site/docs\\api\\asepriteslicekey_hasninepatch.md",slug:"/api/asepriteslicekey_hasninepatch",permalink:"/monogame-aseprite/api/asepriteslicekey_hasninepatch",editUrl:"https://github.com/manbeardgames/monogame-aseprite.github.io/tree/develop/docs/api/asepriteslicekey_hasninepatch.md",version:"current",sidebar_label:"HasNinePatch",sidebar:"apiSideBar",previous:{title:"asepriteslicekey_frameindex",permalink:"/monogame-aseprite/api/asepriteslicekey_frameindex"},next:{title:"asepriteslicekey_haspivot",permalink:"/monogame-aseprite/api/asepriteslicekey_haspivot"}},p=[{value:"MonoGame.Aseprite.Documents.MonoGame.Aseprite.Documents.AsepriteSliceKey",id:"monogameasepritedocumentsmonogameasepritedocumentsasepriteslicekey",children:[]},{value:"AsepriteSliceKey.HasNinePatch Property",id:"asepriteslicekeyhasninepatch-property",children:[]}],s={rightToc:p};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h4",{id:"index"},Object(i.b)("a",Object(n.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(i.b)("h3",{id:"monogameasepritedocumentsmonogameasepritedocumentsasepriteslicekey"},Object(i.b)("a",Object(n.a)({parentName:"h3"},{href:"monogame_aseprite_documents",title:"MonoGame.Aseprite.Documents"}),"MonoGame.Aseprite.Documents"),".",Object(i.b)("a",Object(n.a)({parentName:"h3"},{href:"asepriteslicekey",title:"MonoGame.Aseprite.Documents.AsepriteSliceKey"}),"AsepriteSliceKey")),Object(i.b)("h2",{id:"asepriteslicekeyhasninepatch-property"},"AsepriteSliceKey.HasNinePatch Property"),Object(i.b)("p",null,"Gets a value indicating if this slicekey has nine patch",Object(i.b)("br",{parentName:"p"}),"\n","data.  "),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-csharp"}),"public bool HasNinePatch { get; set; }\n")),Object(i.b)("h4",{id:"property-value"},"Property Value"),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Boolean",title:"System.Boolean"}),"System.Boolean"),"  "))}l.isMDXComponent=!0}}]);