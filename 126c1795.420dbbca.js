(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{234:function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return u}));var i=n(0),o=n.n(i);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,i,o=function(t,e){if(null==t)return{};var n,i,o={},a=Object.keys(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(i=0;i<a.length;i++)n=a[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var m=o.a.createContext({}),s=function(t){var e=o.a.useContext(m),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},b=function(t){var e=s(t.components);return o.a.createElement(m.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return o.a.createElement(o.a.Fragment,{},e)}},_=o.a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,a=t.originalType,r=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),b=s(n),_=i,u=b["".concat(r,".").concat(_)]||b[_]||l[_]||a;return n?o.a.createElement(u,c(c({ref:e},m),{},{components:n})):o.a.createElement(u,c({ref:e},m))}));function u(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var a=n.length,r=new Array(a);r[0]=_;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:i,r[1]=c;for(var m=2;m<a;m++)r[m]=n[m];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}_.displayName="MDXCreateElement"},69:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return r})),n.d(e,"metadata",(function(){return c})),n.d(e,"rightToc",(function(){return p})),n.d(e,"default",(function(){return s}));var i=n(3),o=n(7),a=(n(0),n(234)),r={id:"animation_animation_string__int__int__animationloopdirection__bool_",sidebar_label:"Animation.Animation(string, int, int, AnimationLoopDirection, bool)",hide_title:!0,slug:"animation_animation_string__int__int__animationloopdirection__bool_"},c={unversionedId:"api/animation_animation_string__int__int__animationloopdirection__bool_",id:"api/animation_animation_string__int__int__animationloopdirection__bool_",isDocsHomePage:!1,title:"animation_animation_string__int__int__animationloopdirection__bool_",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animation_animation_string__int__int__animationloopdirection__bool_.md",slug:"/api/animation_animation_string__int__int__animationloopdirection__bool_",permalink:"/monogame-aseprite/api/animation_animation_string__int__int__animationloopdirection__bool_",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animation_animation_string__int__int__animationloopdirection__bool_.md",version:"current",sidebar_label:"Animation.Animation(string, int, int, AnimationLoopDirection, bool)"},p=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.Animation",id:"monogameasepritegraphicsmonogameasepritegraphicsanimation",children:[]},{value:"Animation(string, int, int, MonoGame.Aseprite.Graphics.AnimationLoopDirection, bool) Constructor",id:"animationstring-int-int-monogameasepritegraphicsanimationloopdirection-bool-constructor",children:[]}],m={rightToc:p};function s(t){var e=t.components,n=Object(o.a)(t,["components"]);return Object(a.b)("wrapper",Object(i.a)({},m,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h4",{id:"index"},Object(a.b)("a",Object(i.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(a.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimation"},Object(a.b)("a",Object(i.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(a.b)("a",Object(i.a)({parentName:"h3"},{href:"animation",title:"MonoGame.Aseprite.Graphics.Animation"}),"Animation")),Object(a.b)("h2",{id:"animationstring-int-int-monogameasepritegraphicsanimationloopdirection-bool-constructor"},"Animation(string, int, int, MonoGame.Aseprite.Graphics.AnimationLoopDirection, bool) Constructor"),Object(a.b)("p",null,"Creates a new ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"animation",title:"MonoGame.Aseprite.Graphics.Animation"}),"Animation")," structure  "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-csharp"}),"public Animation(string name, int from, int to, MonoGame.Aseprite.Graphics.AnimationLoopDirection direction, bool isOneShot);\n")),Object(a.b)("h4",{id:"parameters"},"Parameters"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"name")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.String",title:"System.String"}),"System.String"),Object(a.b)("br",{parentName:"p"}),"\n","The name of this animation.  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"from")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Int32",title:"System.Int32"}),"System.Int32"),Object(a.b)("br",{parentName:"p"}),"\n","The index of the frame that this animation starts on.  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"to")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Int32",title:"System.Int32"}),"System.Int32"),Object(a.b)("br",{parentName:"p"}),"\n","The index of the frame that this animation ends on.  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"direction")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"animationloopdirection",title:"MonoGame.Aseprite.Graphics.AnimationLoopDirection"}),"AnimationLoopDirection"),Object(a.b)("br",{parentName:"p"}),"\n","The direction in which the animation loops through its frames.  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"isOneShot")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Boolean",title:"System.Boolean"}),"System.Boolean"),Object(a.b)("br",{parentName:"p"}),"\n","A value indicating if the animation should only play once and not loop.  "))}s.isMDXComponent=!0}}]);