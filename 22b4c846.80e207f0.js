(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{214:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return b}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=n.a.createContext({}),m=function(e){var t=n.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},d=function(e){var t=m(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=m(a),u=r,b=d["".concat(o,".").concat(u)]||d[u]||l[u]||i;return a?n.a.createElement(b,p(p({ref:t},s),{},{components:a})):n.a.createElement(b,p({ref:t},s))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=a[s];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},82:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return m}));var r=a(3),n=a(7),i=(a(0),a(214)),o={id:"animatedsprite_update_float_",sidebar_label:"Update(float)",hide_title:!0,slug:"animatedsprite_update_float_"},p={unversionedId:"api/animatedsprite_update_float_",id:"api/animatedsprite_update_float_",isDocsHomePage:!1,title:"animatedsprite_update_float_",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animatedsprite_update_float_.md",slug:"/api/animatedsprite_update_float_",permalink:"/monogame-aseprite/api/animatedsprite_update_float_",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animatedsprite_update_float_.md",version:"current",sidebar_label:"Update(float)",sidebar:"apiSideBar",previous:{title:"animatedsprite_trygetcurrentframeslice_string__slicekey_",permalink:"/monogame-aseprite/api/animatedsprite_trygetcurrentframeslice_string__slicekey_"},next:{title:"monogame_aseprite_graphics",permalink:"/monogame-aseprite/api/monogame_aseprite_graphics"}},c=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.AnimatedSprite",id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite",children:[]},{value:"AnimatedSprite.Update(float) Method",id:"animatedspriteupdatefloat-method",children:[]}],s={rightToc:c};function m(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h4",{id:"index"},Object(i.b)("a",Object(r.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(i.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite"},Object(i.b)("a",Object(r.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(i.b)("a",Object(r.a)({parentName:"h3"},{href:"animatedsprite",title:"MonoGame.Aseprite.Graphics.AnimatedSprite"}),"AnimatedSprite")),Object(i.b)("h2",{id:"animatedspriteupdatefloat-method"},"AnimatedSprite.Update(float) Method"),Object(i.b)("p",null,"Updates this instance.  "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-csharp"}),"public override void Update(float deltaTime);\n")),Object(i.b)("h4",{id:"parameters"},"Parameters"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"deltaTime")," ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Single",title:"System.Single"}),"System.Single"),Object(i.b)("br",{parentName:"p"}),"\n","The amount of time, in seconds, that have passed since",Object(i.b)("br",{parentName:"p"}),"\n","the last update.  Usually gathered from GameTime.ElapsedTime.TotalSeconds  "))}m.isMDXComponent=!0}}]);