(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{214:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return b}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function m(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),s=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=s(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=m(e,["components","mdxType","originalType","parentName"]),l=s(r),d=a,b=l["".concat(o,".").concat(d)]||l[d]||u[d]||i;return r?n.a.createElement(b,p(p({ref:t},c),{},{components:r})):n.a.createElement(b,p({ref:t},c))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=r[c];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},97:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return p})),r.d(t,"rightToc",(function(){return m})),r.d(t,"default",(function(){return s}));var a=r(3),n=r(7),i=(r(0),r(214)),o={id:"animatedsprite_frametimer",sidebar_label:"FrameTimer",hide_title:!0,slug:"animatedsprite_frametimer"},p={unversionedId:"api/animatedsprite_frametimer",id:"api/animatedsprite_frametimer",isDocsHomePage:!1,title:"animatedsprite_frametimer",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animatedsprite_frametimer.md",slug:"/api/animatedsprite_frametimer",permalink:"/monogame-aseprite/api/animatedsprite_frametimer",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animatedsprite_frametimer.md",version:"current",sidebar_label:"FrameTimer",sidebar:"apiSideBar",previous:{title:"animatedsprite_frames",permalink:"/monogame-aseprite/api/animatedsprite_frames"},next:{title:"animatedsprite_height",permalink:"/monogame-aseprite/api/animatedsprite_height"}},m=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.AnimatedSprite",id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite",children:[]},{value:"AnimatedSprite.FrameTimer Property",id:"animatedspriteframetimer-property",children:[]}],c={rightToc:m};function s(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h4",{id:"index"},Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(i.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite"},Object(i.b)("a",Object(a.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(i.b)("a",Object(a.a)({parentName:"h3"},{href:"animatedsprite",title:"MonoGame.Aseprite.Graphics.AnimatedSprite"}),"AnimatedSprite")),Object(i.b)("h2",{id:"animatedspriteframetimer-property"},"AnimatedSprite.FrameTimer Property"),Object(i.b)("p",null,"Gets the amount of time, in seconds, that is left to display",Object(i.b)("br",{parentName:"p"}),"\n","the current frame in the current animation.  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),"public double FrameTimer { get; set; }\n")),Object(i.b)("h4",{id:"property-value"},"Property Value"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Double",title:"System.Double"}),"System.Double"),"  "))}s.isMDXComponent=!0}}]);