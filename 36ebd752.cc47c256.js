(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{213:function(e,t,r){"use strict";r.d(t,"a",(function(){return m})),r.d(t,"b",(function(){return _}));var i=r(0),n=r.n(i);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=n.a.createContext({}),p=function(e){var t=n.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=i,_=m["".concat(c,".").concat(d)]||m[d]||b[d]||a;return r?n.a.createElement(_,o(o({ref:t},l),{},{components:r})):n.a.createElement(_,o({ref:t},l))}));function _(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,c=new Array(a);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var l=2;l<a;l++)c[l]=r[l];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return p}));var i=r(3),n=r(7),a=(r(0),r(213)),c={id:"animatedsprite_addslice_string__color__ienumerable_slicekey__",sidebar_label:"AddSlice(string, Color, IEnumerable<SliceKey>)",hide_title:!0,slug:"animatedsprite_addslice_string__color__ienumerable_slicekey__"},o={unversionedId:"api/animatedsprite_addslice_string__color__ienumerable_slicekey__",id:"api/animatedsprite_addslice_string__color__ienumerable_slicekey__",isDocsHomePage:!1,title:"animatedsprite_addslice_string__color__ienumerable_slicekey__",description:"MonoGame.Aseprite",source:"@site/docs\\api\\animatedsprite_addslice_string__color__ienumerable_slicekey__.md",slug:"/api/animatedsprite_addslice_string__color__ienumerable_slicekey__",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__color__ienumerable_slicekey__",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/animatedsprite_addslice_string__color__ienumerable_slicekey__.md",version:"current",sidebar_label:"AddSlice(string, Color, IEnumerable<SliceKey>)",sidebar:"apiSideBar",previous:{title:"animatedsprite_addslice_string__color__dictionary_int_slicekey__",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__color__dictionary_int_slicekey__"},next:{title:"animatedsprite_addslice_string__color__slicekey___",permalink:"/monogame-aseprite/api/animatedsprite_addslice_string__color__slicekey___"}},s=[{value:"MonoGame.Aseprite.Graphics.MonoGame.Aseprite.Graphics.AnimatedSprite",id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite",children:[]},{value:"AnimatedSprite.AddSlice(string, Color, System.Collections.Generic.IEnumerable&lt;MonoGame.Aseprite.Graphics.SliceKey&gt;) Method",id:"animatedspriteaddslicestring-color-systemcollectionsgenericienumerablemonogameasepritegraphicsslicekey-method",children:[]}],l={rightToc:s};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h4",{id:"index"},Object(a.b)("a",Object(i.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(a.b)("h3",{id:"monogameasepritegraphicsmonogameasepritegraphicsanimatedsprite"},Object(a.b)("a",Object(i.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics"),".",Object(a.b)("a",Object(i.a)({parentName:"h3"},{href:"animatedsprite",title:"MonoGame.Aseprite.Graphics.AnimatedSprite"}),"AnimatedSprite")),Object(a.b)("h2",{id:"animatedspriteaddslicestring-color-systemcollectionsgenericienumerablemonogameasepritegraphicsslicekey-method"},"AnimatedSprite.AddSlice(string, Color, System.Collections.Generic.IEnumerable","<","MonoGame.Aseprite.Graphics.SliceKey",">",") Method"),Object(a.b)("p",null,"Given the name, color, and collection of ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),Object(a.b)("br",{parentName:"p"}),"\n","instances, creates a new ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice")," instance and adds it",Object(a.b)("br",{parentName:"p"}),"\n","to the collection of slices.  "),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-csharp"}),"public void AddSlice(string name, Color color, System.Collections.Generic.IEnumerable<MonoGame.Aseprite.Graphics.SliceKey> keys);\n")),Object(a.b)("h4",{id:"parameters"},"Parameters"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"name")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.String",title:"System.String"}),"System.String"),Object(a.b)("br",{parentName:"p"}),"\n","The name of the ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice"),".  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"color")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/Microsoft.Xna.Framework.Color",title:"Microsoft.Xna.Framework.Color"}),"Microsoft.Xna.Framework.Color"),Object(a.b)("br",{parentName:"p"}),"\n","The color of the ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"slice",title:"MonoGame.Aseprite.Graphics.Slice"}),"Slice"),".  "),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"keys")," ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.IEnumerable-1",title:"System.Collections.Generic.IEnumerable`1"}),"System.Collections.Generic.IEnumerable","<"),Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey"),Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.Collections.Generic.IEnumerable-1",title:"System.Collections.Generic.IEnumerable`1"}),">"),Object(a.b)("br",{parentName:"p"}),"\n","The collection of ",Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"slicekey",title:"MonoGame.Aseprite.Graphics.SliceKey"}),"SliceKey")," instances that belong",Object(a.b)("br",{parentName:"p"}),"\n","to the slice.  "),Object(a.b)("h4",{id:"exceptions"},"Exceptions"),Object(a.b)("p",null,Object(a.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/api/System.ArgumentException",title:"System.ArgumentException"}),"System.ArgumentException"),Object(a.b)("br",{parentName:"p"}),"\n","Thrown if the slice collection already contains a slice with the same name  "))}p.isMDXComponent=!0}}]);