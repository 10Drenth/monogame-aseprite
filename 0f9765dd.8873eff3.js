(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{234:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return f}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),m=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=m(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=m(r),b=a,f=s["".concat(o,".").concat(b)]||s[b]||u[b]||i;return r?n.a.createElement(f,c(c({ref:t},p),{},{components:r})):n.a.createElement(f,c({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=r[p];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},68:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return m}));var a=r(3),n=r(7),i=(r(0),r(234)),o={id:"frame",sidebar_label:"Overview",hide_title:!0,slug:"frame"},c={unversionedId:"api/frame",id:"api/frame",isDocsHomePage:!1,title:"frame",description:"MonoGame.Aseprite",source:"@site/docs\\api\\frame.md",slug:"/api/frame",permalink:"/monogame-aseprite/api/frame",editUrl:"https://github.com/manbeardgames/monogame-aseprite/tree/gh-pages-develop/docs/api/frame.md",version:"current",sidebar_label:"Overview",sidebar:"apiSideBar",previous:{title:"animation_to",permalink:"/monogame-aseprite/api/animation_to"},next:{title:"frame_frame_rectangle__float_",permalink:"/monogame-aseprite/api/frame_frame_rectangle__float_"}},l=[{value:"MonoGame.Aseprite.Graphics",id:"monogameasepritegraphics",children:[]},{value:"Frame Struct",id:"frame-struct",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Fields",id:"fields",children:[]}]}],p={rightToc:l};function m(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h4",{id:"index"},Object(i.b)("a",Object(a.a)({parentName:"h4"},{href:"index",title:"index"}),"MonoGame.Aseprite")),Object(i.b)("h3",{id:"monogameasepritegraphics"},Object(i.b)("a",Object(a.a)({parentName:"h3"},{href:"monogame_aseprite_graphics",title:"MonoGame.Aseprite.Graphics"}),"MonoGame.Aseprite.Graphics")),Object(i.b)("h2",{id:"frame-struct"},"Frame Struct"),Object(i.b)("p",null,"A frame is the rectangluar area within the spritesheet that describes a single",Object(i.b)("br",{parentName:"p"}),"\n","frame of an animation and the duration in which that frame should be rendered.  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csharp"}),"public struct Frame\n")),Object(i.b)("h3",{id:"constructors"},"Constructors"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"frame_frame_rectangle__float_",title:"MonoGame.Aseprite.Graphics.Frame.Frame(Rectangle, float)"}),"Frame(Rectangle, float)")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"frame_frame_int__int__int__int__float_",title:"MonoGame.Aseprite.Graphics.Frame.Frame(int, int, int, int, float)"}),"Frame(int, int, int, int, float)"))),Object(i.b)("h3",{id:"fields"},"Fields"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"frame_bounds",title:"MonoGame.Aseprite.Graphics.Frame.Bounds"}),"Bounds")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"frame_duration",title:"MonoGame.Aseprite.Graphics.Frame.Duration"}),"Duration"))))}m.isMDXComponent=!0}}]);